/* ========= begin header generated by ./mkh ========= */
#ifdef __cplusplus
extern "C" {
#endif

/* === regcomp.c === */
static void vftr_p_ere(register struct parse *p, int stop);
static void vftr_p_ere_exp(register struct parse *p);
static void vftr_p_str(register struct parse *p);
static void vftr_p_bre(register struct parse *p, register int end1, register int end2);
static int vftr_p_simp_re(register struct parse *p, int starordinary);
static int vftr_p_count(register struct parse *p);
static void vftr_p_bracket(register struct parse *p);
static void vftr_p_b_term(register struct parse *p, register cset *cs);
static void vftr_p_b_cclass(register struct parse *p, register cset *cs);
static void vftr_p_b_eclass(register struct parse *p, register cset *cs);
static char vftr_p_b_symbol(register struct parse *p);
static char vftr_p_b_coll_elem(register struct parse *p, int endc);
static char vftr_othercase(int ch);
static void vftr_bothcases(register struct parse *p, int ch);
static void vftr_ordinary(register struct parse *p, register int ch);
static void vftr_nonnewline(register struct parse *p);
static void vftr_repeat(register struct parse *p, sopno start, int from, int to);
static int vftr_seterr(register struct parse *p, int e);
static cset *vftr_allocset(register struct parse *p);
static void vftr_freeset(register struct parse *p, register cset *cs);
static int vftr_freezeset(register struct parse *p, register cset *cs);
static int vftr_firstch(register struct parse *p, register cset *cs);
static int vftr_nch(register struct parse *p, register cset *cs);
static void vftr_mcadd(register struct parse *p, register cset *cs, register char *cp);
static void vftr_mcsub(register cset *cs, register char *cp);
static int vftr_mcin(register cset *cs, register char *cp);
static char *vftr_mcfind(register cset *cs, register char *cp);
static void vftr_mcinvert(register struct parse *p, register cset *cs);
static void vftr_mccase(register struct parse *p, register cset *cs);
static int vftr_isinsets(register struct re_guts *g, int c);
static int vftr_samesets(register struct re_guts *g, int c1, int c2);
static void vftr_categorize(struct parse *p, register struct re_guts *g);
static sopno vftr_dupl(register struct parse *p, sopno start, sopno finish);
static void vftr_doemit(register struct parse *p, sop op, size_t opnd);
static void vftr_doinsert(register struct parse *p, sop op, size_t opnd, sopno pos);
static void vftr_dofwd(register struct parse *p, sopno pos, sop value);
static void vftr_enlarge(register struct parse *p, sopno size);
static void vftr_stripsnug(register struct parse *p, register struct re_guts *g);
static void vftr_findmust(register struct parse *p, register struct re_guts *g);
static sopno vftr_pluscount(register struct parse *p, register struct re_guts *g);

#ifdef __cplusplus
}
#endif
/* ========= end header generated by ./mkh ========= */
